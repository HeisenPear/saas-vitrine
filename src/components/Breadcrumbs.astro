---
import { ChevronRight } from 'lucide-react';

interface BreadcrumbItem {
  label: string;
  href?: string;
}

interface Props {
  items: BreadcrumbItem[];
  className?: string;
}

const { items, className = '' } = Astro.props;

// Generate Schema.org BreadcrumbList
const breadcrumbSchema = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  "itemListElement": items.map((item, index) => ({
    "@type": "ListItem",
    "position": index + 1,
    "name": item.label,
    ...(item.href && { "item": `${Astro.site}${item.href.startsWith('/') ? item.href.slice(1) : item.href}` })
  }))
};
---

<!-- Breadcrumbs Schema.org -->
<script type="application/ld+json" set:html={JSON.stringify(breadcrumbSchema)} />

<!-- Breadcrumbs Navigation -->
<nav aria-label="Fil d'Ariane" class={`py-4 ${className}`}>
  <ol class="flex items-center space-x-2 text-sm" itemscope itemtype="https://schema.org/BreadcrumbList">
    {items.map((item, index) => (
      <li itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem" class="flex items-center">
        {item.href ? (
          <>
            <a
              href={item.href}
              itemprop="item"
              class="text-gray-400 hover:text-accent transition-colors"
            >
              <span itemprop="name">{item.label}</span>
            </a>
            <meta itemprop="position" content={String(index + 1)} />
            {index < items.length - 1 && (
              <ChevronRight size={16} className="mx-2 text-gray-600" aria-hidden="true" />
            )}
          </>
        ) : (
          <>
            <span itemprop="name" class="text-gray-100 font-medium">{item.label}</span>
            <meta itemprop="position" content={String(index + 1)} />
          </>
        )}
      </li>
    ))}
  </ol>
</nav>
